// -----------------------------------------------------------------------------
// This file contains very basic styles.
// -----------------------------------------------------------------------------

/**
* Set up a decent box model on the root element
*/

:root {
  cursor: default;
  font-smooth: always;
  -webkit-font-smoothing: auto;
  -moz-font-smoothing: auto;
  vertical-align: top
}

html, body {
  background-color: $base-grey;
  box-sizing: border-box;
  font-size: $text-font-size;
  width: 100vw;
  min-height: 100vh;
  overflow-x: hidden;

  // &.device--mobile { overflow-x: hidden; }
  // &.page--noScroll { overflow: hidden; }
}

// Prevent transitions before elements load;
body {
  &.preload * { transition: none !important; }
}

/**
* Make all elements from the DOM inherit from the parent box-sizing
* Since `*` has a specificity of 0, it does not override the `html` value
* making all elements inheriting from the root box-sizing value
* See: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
*/
*, *::before, *::after {
  box-sizing: inherit;
  color: inherit;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  text-decoration: inherit;
  vertical-align: inherit;

  // iOS active touch highlight modify
  &, &:link { -webkit-tap-highlight-color: rgba($bright, .02); }
}

// Fix images width
img:not(.free):not(.image--cover) { max-width: 100%; }

// Reset unordered list
ul { list-style: none; margin: 0; padding: 0; }
ul li { margin: 0; padding: 0; }

/**
* Basic styles for links
*/
a {
  color: $comp-color;
  text-decoration: none;
  transition: $transition;

  @include on-event {
    color: $brand-color;

    p & {text-decoration: underline;}
  }

  &.link--spare {
    display: block; padding: 1rem;
    color: inherit; opacity: .36;
    // text-transform: uppercase;

    @include on-event {opacity: 1;}
  }
}

/**
* General layout
*/
section {
  &.layout--fullscreen { min-height: 100vh}
}

// Grid system
// TODO Finish grid system
.grid__container {
  position: relative;
  @include display(flex);
  @include flex-flow(row wrap);

  & > .grid__item {
    @include flex(0 1 auto);

    &.grid__item--1of8 { width: (100%/8); }
    &.grid__item--1of7 { width: (100%/7); }
    &.grid__item--1of6 { width: (100%/6); }
    &.grid__item--1of5 { width: (100%/5); }
    &.grid__item--1of4 { width: (100%/4); }
    &.grid__item--1of3 { width: (100%/3); }
    &.grid__item--1of2 { width: (100%/2); }
    &.grid__item--1of1 { width: 100%; }

    // TODO Grid System â€” Revise breakpoints
  }

  &.grid--gutter {
    $gutter: 1rem;

    section & {margin: -($gutter/2); margin-top: ($gutter/2);}

    & > .grid__item {
      padding: ($gutter/2);
    }
  }
}


// Elevations and layout
.layout--base {
  margin: .64rem 0;
  padding: .64rem;
  box-shadow: none;
  transition: $transition;
  position: relative;

  &.transparent--inverse { background-color: rgba( 255,255,255, 0); color: $bright; }
  &.paint--white { background-color: $bright; box-shadow: 0 0 0 1px rgba($text-color, .05); }
  &.paint--navy { background-color: $brand-color; color: $bright; }
  &.paint--sky { background-color: $comp-color; color: $bright; }
  &.paint--red { background-color: $accent-color; color: $bright; }

  &.group, .layout__group & {
    margin-bottom: 0; margin-top: 0;

    &:first-child { margin-top: 1rem; }
    &:last-child { margin-bottom: 1rem; }
  }

  & & {
    margin-left: 0; margin-right: 0;
    &:first-child { margin-top: 0; }
    &:last-child { margin-bottom: 0; }
  }

  &:first-of-type { margin-top: 0; }
  &:last-of-type { margin-bottom: 0; }

  @at-root section#{&} { margin: 0; }
}

.layout__group {
  & + & { margin-top: 1rem; }
}

@for $n from 1 through length($shadows) {
  .layout--card-#{$n} {
    margin: .64rem;
    padding: .64rem;
    background-color: lighten($bright, ( ( $n - 1 ) * 2% ) );
    box-shadow: nth($shadows, $n);
    transition: $transition;
    z-index: $n;
    position: relative;


    &.group, .layout__group & {
      margin-bottom: 0; margin-top: 0;

      &:first-child { margin-top: 1rem; }
      &:last-child { margin-bottom: 1rem; }
    }

    .layout--base & {
      margin-left: 0; margin-right: 0;
      &:first-child { margin-top: 0; }
      &:last-child { margin-bottom: 0; }
    }

    &.paint--navy { background-color: tint($brand-color, ( ( $n - 1 ) * 3% ) ); color: $bright; box-shadow: nth($shadows-heavy, $n);}
    &.paint--sky { background-color: tint($comp-color, ( ( $n - 1 ) * 3% ) ); color: $bright; box-shadow: nth($shadows, $n);}
    &.paint--red { background-color: tint($accent-color, ( ( $n - 1 ) * 3% ) ); color: $bright; box-shadow: nth($shadows-heavy, $n);}

    &.transparent { background-color: rgba( 255,255,255, ( $n * 0.01 ) ); }
    &.transparent--inverse { background-color: rgba( 255,255,255, ( ( $n - 1 ) * .02 ) ); color: $bright; }
  }
}

.layout__button-bar {
  padding-top: 1rem;

  &.space--m { padding-top: $ico-size-m; }
  &.space--l { padding-top: $ico-size-l; }
  &.space--xl { padding-top: $ico-size-xl; }
  &.button-bar--divided {
    .grid__item + .grid__item { border-left: 1px solid rgba($white, .1);}
  }
}

// Brand gradient and backgrounds
.paint--gradient {
  color: $bright;
  @include brand-gradient;
}

@for $n from 1 through 17 {
  .paint--back-#{$n} {
    color: $bright;
    @include brand-gradient('backs/ph#{$n}.jpg');

    @if $n == 7 {
      // I know this pic... focus is on the right
      background-position: 50% 50%, 50% 50%, right center;
    }
  }
}

// Content flow
.flow--right { text-align: right; }
.flow--center { text-align: center; }


/**
* Ripples
*/
a:not(no-ripple), .ripple {
  display: inline-block;
  position: relative;
  overflow: hidden !important;
  @include perspective(1000px);
  @include transform(translate3d(0, 0, 1px));
  @include backface-visibility(hidden);
}

.ink {
  display: block;
  position: absolute;
  background-color:rgba($white, .36);
  border-radius: 100%;
  @include transform(scale(0));

  // & ~ & {display: none;}

  [class^="layout--card-"] & { background-color: rgba($grey, .11); }
  .paint--navy &,
  .cover__container & { background-color: rgba($white, .36); }
}

.animate {
  @include animation(ripple .64s ease-out);
}

@-webkit-keyframes ripple {
  100% {opacity: 0; -webkit-transform: scale(2.5);}
}
@-moz-keyframes ripple {
  100% {opacity: 0; -moz-transform: scale(2.5);}
}
@-o-keyframes ripple {
  100% {opacity: 0; -o-transform: scale(2.5);}
}
@keyframes ripple {
  100% {opacity: 0; transform: scale(2.5);}
}


/**
* Animation repo
*/
// @keyframes blink {
//   0% { opacity: .36; }
//   100% { opacity: 1;}
// }
